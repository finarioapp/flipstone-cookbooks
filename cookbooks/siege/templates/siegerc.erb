# Updated by Siege 2.68, March-07-2010
# Copyright 2000-2007 by Jeffrey Fulmer, et al.
# 
# Chef-delivered siege configuration file --
#
# LOCAL CHANGES WILL BE NUKED FROM ORBIT: 
# Individual runs of siege should be passed config files if
# you need different than these defaults.
#
# For more information about configuring and running
# this program, visit: http://www.joedog.org/

#
# Signify verbose mode, true turns on verbose output
# ex: verbose = true|false
#
verbose = false

#
# Default logging status, true turns logging on.
# ex: logging = true|false
#
logging = true

#
# HTTP protocol.  Options HTTP/1.1 and HTTP/1.0.
# Some webservers have broken implementation of the
# 1.1 protocol which skews throughput evaluations.
# If you notice some siege clients hanging for
# extended periods of time, change this to HTTP/1.0
# ex: protocol = HTTP/1.1
#     protocol = HTTP/1.0
#
protocol = HTTP/1.1

#
# Connection directive. Options "close" and "keep-alive"
# Starting with release 2.57b3, siege implements persistent 
# connections in accordance to RFC 2068 using both chunked
# encoding and content-length directives to determine the 
# page size. To run siege with persistent connections set
# the connection directive to keep-alive. (Default close)
# CAUTION: use the keep-alive directive with care.
# DOUBLE CAUTION: this directive does not work well on HPUX
# TRIPLE CAUTION: don't use keep-alives until further notice
# ex: connection = close
#     connection = keep-alive
#
connection = close

#
# Default number of simulated  concurrent users
# ex: concurrent = 25
#
concurrent = 25

#
# Repetitions.  The length of siege may be specified in client
# reps rather then a time duration.  Instead of specifying a time
# span, you can tell each siege instance to hit the server X number
# of times.  So if you chose 'reps = 20' and you've selected 10 
# concurrent users, then siege will hit the server 200 times.
# ex: reps = 20
#
reps = 10

#
# Default URLs file, set at configuration time, the default
# file is PREFIX/etc/urls.txt.  So if you configured siege
# with --prefix=/usr/local then the urls.txt file is installed
# int /usr/local/etc/urls.txt.  Use the "file = " directive to
# configure an alternative URLs file. You may use environment
# variables as shown in the examples below:
# ex: file = /export/home/jdfulmer/MYURLS.txt
#     file = $HOME/etc/urls.txt
#     file = $URLSFILE
#
# file =

#
# Default delay value, see the siege(1) man page.  
# This value is used for load testing, it is not used 
# for benchmarking.
# ex: delay = 3
#
delay = 1

#
# Internet simulation. If true, siege clients will hit
# the URLs in the urls.txt file randomly, thereby simulating
# internet usage.  If false, siege will run through the 
# urls.txt file in order from first to last and back again.
# ex: internet = true
#
internet = false

#
# Default benchmarking value, If true, there is NO delay
# between server requests, siege runs as fast as the web
# server and the network will let it.  Set this to false 
# for load testing.
# ex: benchmark = true
# 
benchmark = false

#
# Set the siege User-Agent to identify yourself at the
# host, the default is: JoeDog/1.00 [en] (X11; I; Siege #.##) 
# But that wreaks of corporate techno speak.  Feel free
# to make it more interesting :-)  Since Limey is recovering
# from minor surgery as I write this, I'll dedicate the 
# example to him...
# ex: user-agent = Limey The Bulldog
# 
user-agent = Siege Agent/2.68 [en]

#
# Accept-encoding. This option allows you to specify 
# acceptable encodings returned by the server. Use this
# directive to turn on compression. By default we accept
# gzip compression.
#
# ex: accept-encoding = *
#     accept-encoding = gzip
#     accept-encoding = compress;q=0.5;gzip;q=1
accept-encoding = gzip

#
# TURN OFF THAT ANNOYING SPINNER!
# Siege spawns a thread and runs a spinner to entertain you
# as it collects and computes its stats. If you don't like 
# this feature, you may turn it off here.
# ex: spinner = false 
#
spinner = true

#
# WWW-Authenticate login. When siege hits a webpage
# that requires basic authentication, it will search its 
# logins for authentication which matches the specific realm 
# requested by the server. If it finds a match, it will send 
# that login information. If it fails to match the realm, it 
# will send the default login information. (Default is "all"). 
# You may configure siege with several logins as long as no
# two realms match. The format for logins is:
# username:password[:realm] where "realm" is optional.
# If you do not supply a realm, then it will default to "all"
# ex: login = jdfulmer:topsecret:Admin
#     login = jeff:supersecret
#
# login = 

#
# WWW-Authenticate username and password.  When siege
# hits a webpage that requires authentication, it will
# send this user name and password to the server.  Note
# this is NOT form based authentication.  You will have
# to construct URLs for that.
# ex: username = jdfulmer
#     password = whoohoo
#
# username = 
# password =

#
# Login URL. This is the first URL to be hit by every siege
# client. This feature was designed to allow you to login to 
# a server and establish a session. It will only be hit once
# so if you need to hit this URL more then once, make sure it
# also appears in your urls.txt file.
#
# ex: login-url = http://eos.haha.com/login.jsp POST name=jeff&pass=foo
#
# login-url = 

# end of siegerc
